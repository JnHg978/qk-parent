<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qk.management.mapper.UserMapper">
    <insert id="insert">
        insert into user(username, password, name, phone, email, gender, status, dept_id, role_id, image, remark, create_time, update_time)
        values(#{username}, #{password}, #{name}, #{phone}, #{email}, #{gender}, #{status}, #{deptId}, #{roleId}, #{image}, #{remark}, #{createTime}, #{updateTime})
    </insert>
    <update id="updateById">
        update user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="image != null and image != ''">
                image = #{image},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteById">
        delete from user
        where id in
        <foreach item="id" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <select id="count" resultType="java.lang.Long">
        select count(*) from user
        <where>
            <if test="name != null and name != ''">
                and name like concat('%',#{name},'%')
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="phone != null and phone != ''">
                and phone like concat('%',#{phone},'%')
            </if>
            <if test="deptId != null">
                and dept_id = #{deptId}
            </if>
        </where>
    </select>
    <select id="select" resultType="com.qk.domain.UserDO">
        select u.id, u.name, u.username, u.password, u.phone, u.email, u.gender, u.status, u.image, u.remark, u.create_time,
        u.update_time, d.name as dept_name, r.name as role_name
        from user u
        left join dept d on u.dept_id = d.id
        left join role r on u.role_id = r.id
        <where>
            <if test="name != null and name != ''">
                and u.name like concat('%',#{name},'%')
            </if>
            <if test="status != null">
                and u.status = #{status}
            </if>
            <if test="phone != null and phone != ''">
                and u.phone like concat('%',#{phone},'%')
            </if>
            <if test="deptId != null">
                and u.dept_id = #{deptId}
            </if>
        </where>
        order by update_time desc
        limit #{page}, #{pageSize}
    </select>
    <select id="selectByRole" resultType="com.qk.entity.User">
        select u.id, u.name, u.username, u.password, u.phone, u.email, u.gender, u.status, u.image, u.remark, u.create_time,
        u.update_time, u.dept_id, u.role_id
        from user u
        left join role r on u.role_id = r.id
        where r.label = #{roleLabel}
        order by update_time desc
    </select>
    <select id="selectByDept" resultType="com.qk.entity.User">
        select u.id, u.name, u.username, u.password, u.phone, u.email, u.gender, u.status, u.image, u.remark, u.create_time,
        u.update_time, u.dept_id, u.role_id
        from user u
        where u.dept_id = #{deptId}
        order by update_time desc
    </select>
    <select id="selectByUsername" resultType="com.qk.entity.User">
        select u.id, u.name, u.username, u.image, u.password, u.role_id
        from user u
        where u.username = #{username}
    </select>
</mapper>